---
title: "The Habits of Goodreads Users"
subtitle: |
  | An Exploration of Ratings, Tags, and More
  | Data Science 1 with R (STAT 301-1)
author: "Valerie Chu"
date: today

format:
  html:
    toc: true
    embed-resources: true
    code-fold: show
    link-external-newwindow: true

execute:
  warning: false
  
from: markdown+emoji 
---


## Things to Fix

Q1, Pt 1

-   If two books have the same average rating, put the book with the higher rating count ahead of the one with the lower rating count.

-   Filter with 1,000+ ratings. Or mention that this book only contains the 10,000 most popular books on Goodreads, so that's why this filtering doesn't matter since it already takes care of that itself.

Q1, Pt 3

-   Mention that the average is so high bc these are the 10,000 most popular books on Goodreads.

Notes

- maybe use gg_miss_var

- Write in the csv codebook

- save plot

- perhaps add a count of each language. or factor all the english ones as english varieties then have an other category.

To Dos

- Create README - both for the main part and for the data (explains where the data comes from, gitignores, etc.). 

- Spellcheck documents




::: {.callout-tip icon="false"}
## Github Repo

[https://github.com/stat301-1-2023-fall/final-project-1-valerieyichu.git](https://github.com/stat301-1-2023-fall/final-project-1-valerieyichu.git)
:::

```{r, echo = FALSE}
# Load Package
library(tidyverse)

```

```{r, echo = FALSE}
# Load Data

books <- read_delim("data/books.csv")
books_tags <- read_csv("data/book_tags.csv")
ratings <- read_csv("data/ratings.csv")
tags <- read_csv("data/tags.csv")
tbr <- read_csv("data/to_read.csv")

# Load Codebook
goodreads_codebook <- read_csv("data/goodreads_codebook.csv")
```

## Introduction

::: {.callout-tip icon="false"}
## My Data Source

[**https://github.com/zygmuntz/goodbooks-10k**](https://github.com/zygmuntz/goodbooks-10k)
:::


**What is Goodreads?**

This is how Goodreads describes itself: "Goodreads is the world's largest site for readers and book recommendations. Our mission is to help readers discover books they love and get more out of reading. Goodreads launched in January 2007."

Among other unique features, Goodreads allows users to:

- Rate books

- Write book reviews

- Track and tag the books they're reading, have read, and want to read


## Data Overview and Quality

::: {.callout-tip icon="false"}
## What is my data about?

This dataset contains six million ratings for the 10,000 most rated books on Goodreads. 

It was last updated on Sept. 19, 2017, so books published after that date won't appear in this dataset. 
:::

It comes in five separate csv files: "books", "books_tags", "ratings", "tags", and "tbr"

(For context, users on Goodreads can *tag* books and add them to their shelves. And "tbr" stands for "to be read".)

In this document, when I say "Goodreads data" or "Goodreads dataset", I am referring to the five datasets generally. For individual datasets, I will use their specific names. 

(All data is in the "data" folder, and I didn't have to clean up any of the five original datasets, so they're not in there.)


**Why am I interested in this dataset?**

The reason why I'm interested in this dataset is extremely simple: I love reading. Analyzing Goodreads data / Goodreads user data seems super fun. 

More specifically, I'm interested in analyzing user habits on Goodreads. This is why I chose this dataset. I've spent several hours combing through Kaggle, Google, Reddit, and other places on the internet. As far as I can tell, this is the most comprehensive dataset about books and user readings habits I can find, freely available from the internet. It was scraped from Goodread's and Goodread users's publicly available data. 

**More about the data**

The Goodreads dataset is of high quality. 

There are no missingness values in any of the five dataset included in the Goodreads dataset except for "books", which is missing some values in: language_code, isbn, isbn13, original_title, original_publication_year. This will not effect my exploratory data analysis, although I will keep the missingness in mind. (See "01_Exploring_Missingness.R" for more.)

The "books" dataset:

- There are 10,000 observations.

- There are 23 variables.

- There are 17 numerical variables.

- There are 6 categorical variables.

The other four datasets can be combined with each other and with the "books" dataset in ways that can enhance my exploration of Goodreads data and user habits. 


## My Objectives

There are several questions I'm interested in examining in Goodreads data.

Some of these questions include:

-   What are the most highly rated books?

-   Do readers who leave the most ratings leave the higher ratings on average or lower ratings on average?

-   Is there any relationship between the number of times a book appears in the "tbr" dataset and the number of ratings it received?

-   What is the relationship between a book's average rating and the year it was published?

-   How do users tag the most highly rated books? Is there a trend?


I have divided my exploration of the Goodreads dataset into two parts. The first part looks at the rating habits of Goodreads users. The second part focuses on how Goodreads users interact with young adult (YA) novels on Goodreads. 



## Joining Data

::: {.callout-tip icon="false"}

## Note

The joining data step took a lot of exploration due to some unclearness in the README I got this dataset from. I made a qmd in this project called "00_Joining_Datasets" that walks through my process of joining these two datasets in more depth. 

:::


**Step 1: Joining tags and books_tags**

Why am I joining tags and books_tags?

When I join the "books_tags" dataset together with the "tags" dataset, I can figure out what each book (`goodreads_book_id`) was tagged with (`tag_name`). (I would still have to match each `goodreads_book_id` with its title, but that's another join.)

```{r, echo = FALSE}
# Join tags and books_tags

books_and_tags <- full_join(tags, books_tags, join_by(tag_id == tag_id))

```


**Step 2: Joining books and ratings**

Why am I joining books and ratings?

When I join the "books" dataset with the "ratings" dataset, I can see the rating each user gave each book. 

Joining "books" and "ratings" will allow me to start answering on three of my research questions: "What are the most highly rated books?", "What is the relationship between a book's average rating and the year it was published?" and "Do readers who leave the most ratings leave the higher ratings on average or lower ratings on average?"


```{r, include = FALSE}
books_and_ratings <- full_join(books, ratings, join_by(book_id == book_id)) |> 
  group_by(title) |> 
  select(title, book_id, goodreads_book_id, work_id, user_id, rating)

```

Now, for the fun part. An EDA with our two new datasets, "books_and_tags" and "books_and_ratings". And maybe some of the original datasets too.


## Exploration 1: The Rating Habits of Goodreads Users

### Part 1: Which 10 books have the highest average Goodreads rating?

To answer this question, I'm going to look at the books dataset. The variable `average_rating` can help us figure this out.

**10 Books with the Highest Average Goodreads Rating**

```{r, echo = FALSE}
books |> 
  arrange(desc(average_rating)) |> 
  select(book_id, title, authors, average_rating, ratings_count) |> 
  slice_head(n = 10) |> 
  DT::datatable()

```

I'm surprised at some of the ratings of these books, yet very much not surprised at others.

-   "The Complete Calvin and Hobbes" is more geared toward middle-grade readers, so it's odd that it has the highest rating.

-   But I'm not surprised that "Words of Radiance" had the second highest average Goodreads rating. I know that the Goodreads demographic tends to be young adults and book bloggers, most of who all enjoy reading and rating young adult fiction on Goodreads. That's a category this book falls within.

-   I definitely expected a Harry Potter book to be one of Goodreads's highest average books, but not necessarily a boxed set. (Although I should note, the problem with Goodreads is that it considers boxed sets individual books, and there are neither string functions that I can use to filter them from individual books nor tags I can use to filter them, since the naming conventions vary from boxed set to boxed set and closely resemble how individual book titles appear.) But just from being a casual Goodreads user, I've observed that boxed sets tend to get higher ratings than individual books of the series. So in a way, it *is* unsurprising that the trend holds true here.

-   The "ESV Study Bible" is also something I expected to see on this list, although I expected it to be ranked higher. Today, it's not 1800s Europe where everyone owns a copy of the Bible, but there are still many people who do and love reading it.

-   I *am* surprised that various spinoffs of Calvin and Hobbes and Harry Potter dominate 7 of 10 rankings in the top 10 most highly rated books. I knew they were popular, but not *that* popular. But I guess Goodreads is also an American company, and those are the types of books Americans read and love.

### Part 2: Do people hate-rate or love-rate books?

**In other words, is there a relationship between a book's number of ratings and its average rating?**

```{r, echo = FALSE}
# Start by creating a new variable, rank_of_number_ratings, that assigns each book a rank based on how high their ratings_count is. In other words, more ratings = higher rank. 

rank_ratings <- function(books, ratings_count) {
  books %>%
    arrange(desc({{ ratings_count }})) %>%
    mutate(rank_of_number_ratings = row_number())
}

rank_ratings <- rank_ratings(books, ratings_count)

# rank_ratings contains everything inside the books dataset, plus the variable `rank_of_number_ratings`

```

```{r, echo = FALSE}
# reminder: rank_ratings contains everything inside the books dataset, plus the variable `rank_of_number_ratings`
# Create a scatterplot to show how the average rating changes as the rank of the number of ratings changes

rank_ratings |> 
ggplot(aes(x = rank_of_number_ratings, y = average_rating, color = language_code)) +
  geom_point(alpha = 0.1) +
  labs(
    title = "Average Rating vs. Ratings Place",
    subtitle = "There is no relationship between a book's average rating and the number of ratings it received.",
    x = "Books ranked by the number of ratings it got (1 = Most ratings, 10000 = Least ratings)", 
    y = "Average Rating",
    color = "Language Code") +
  theme_bw()

```

**There appears to be no relationship between a *book's average rating* and *its rank based on the number of ratings it received*.**

Looking at the correlation confirms this: The correlation between `rank_of_number_ratings` and`average_rating` is almost 0.

```{r, echo = FALSE}
# reminder: rank_ratings contains everything inside the books dataset, plus the variable `rank_of_number_ratings`

corr <- rank_ratings |> 
  select(average_rating, rank_of_number_ratings) |> 
  cor() |> 
  knitr::kable()

corr

```

I'm very surprised at this finding. I had expected the rank of the number of ratings a book received to have at least some correlation with the average rating. 

**So, it seems people are neither more nor less inclined to rate a book based on whether they hated or loved that book.**

### Part 3: How many books and what percent of books on Goodreads are written in English?

This dataset is a dataset of the 10,000 most rated books on Goodreads. The graph above is so green because most of these books are in some variety of English. Unsurprisingly, the people who use Goodreads, an American-based company, mostly rate books written in English and other European languages. 

**So, how many books and what percent of books on Goodreads are written in English?**
```{r, echo = FALSE}
rank_ratings_summary <- rank_ratings |> 
  group_by(language_code) |> 
  summarize(count = n()) 

```

```{r, echo = FALSE}
rank_ratings_prop <- rank_ratings_summary |> 
  mutate(percent = count / sum(count) * 100)
  
rank_ratings_prop <- rank_ratings_prop %>%
  mutate(language_code = coalesce(language_code, "other"))

colnames(rank_ratings_prop) <- c("Language Code", "Count", "Percent")

rank_ratings_prop |> 
  DT::datatable()
 
```


### Part 4: What's the distribution of book ratings?

When I look at a Goodreads rating, I don't think of the rating scale as continuous. I think about them in bins of 0.25. 

For example, a book with ≥ 4.5 ratings is excellent. A book with ≥ 4.75 is practically unheard of. And a book with a rating between 4.0 and 4.25 is great. 

So that's why instead of using a histogram, I'm going to put average ratings into bins of 0.25 and create a bar plot that will display the distribution of book ratings on Goodreads in a way that's intuitive to think about. 

```{r, include = FALSE}
books_cut <- rank_ratings |> 
  mutate(average_rating_cut = cut(average_rating, 
                                 breaks = c(0, 0.25, 0.5, 0.75,
                                            1, 1.25, 1.5, 1.75,
                                            2, 2.25, 2.5, 2.75,
                                            3, 3.25, 3.5, 3.75, 
                                            4, 4.25, 4.5, 4.75, 
                                            5))) |> 
  select(title, average_rating, average_rating_cut)

books_cut

```

**Distribution of Book Ratings**
```{r, echo = FALSE}
books_count <- books_cut |> 
  count(average_rating_cut) 

colnames(books_count) <- c("Average Rating", "Number of Books")

books_count |>
  knitr::kable()
```

```{r, echo = FALSE}
books_cut |> 
  ggplot(aes(x = average_rating_cut)) +
  geom_bar() +
  labs(title = "The Distribution of the Average Rating of Books on Goodreads",
       x = "Average Rating",
       y = "Number of Books") +
  theme_bw()

```

A few things I found interesting about the distribution of the average rating of books on Goodreads:

-   It's left skewed and unimodal.

-   Most books (3695 of them, as seen in the table above this graph) have a rating greater than 4 and ≤ 4.25.

-   Another 3269 books have a rating greater than 3.75 and ≤ 4.

-   1 book has an average rating greater than 2.25 and ≤ 2.5. 1 book has a rating greater than 2.5 and ≤ 2.75.

-   5 books have an average rating greater than 4.75 and ≤ 5.0.

So clearly, there are very very few books in the 10,000 most rated books on Goodreads with an average rating of less than 3. And there are very very few books with an average rating of more than 4.75.

That means that people who rate the popular books on Goodreads usually either:

-   

    1.  Like the book enough that they went to Goodreads and rated it decently highly (a 3, 4, or 5).

-   

    2.  Don't like to rate extremely high or low.

-   

    3.  Or the number of people who gave books a decently high rating tend to pull up the average ratings of the people who rate books lowly.

Without more data, it's hard to tell whether we can explain away the cluster around book ratings between 3.75 and 4.25 as one of these suggestions, a combination of these suggestions, or none of these suggestions. It's still fun to think about though.

Also, I should note again that in the context of this dataset containing only the most rated (ie. popular) books on Goodreads, it does make sense that books with lower ratings likely aren't promoted enough — and therefore likely aren't rated enough — to appear on this dataset.   


### Part 5: Do readers who leave the most ratings leave the higher ratings on average or lower ratings on average?


#### Part 5, Section 1: Who are the readers who leave the most ratings on Goodreads? 

Each user (user_id) can give one rating to one book. There are 53,424 users who rated the 10,000 most rated books on Goodreads. These are the top 10 raters.

**Top 10 Goodreads Users Who Rated the Most Books in this Dataset** 

```{r, echo = FALSE}
# Grouping by user_id and counting that number tells us the users who rate the most books on Goodreads. `count` is the number of books the user has rated. If we also keep in mind that this dataset only has the data of the 10k most rated books on Goodreads, having users who rated 200 books (as a few book-rating users have done) is quite impressive.

books_and_ratings |> 
  group_by(user_id) |> 
  summarize(count = n()) |> 
  arrange(desc(count)) |> 
  slice_head(n = 10) |> 
  knitr::kable()

```

#### Part 5, Section 2: How do top raters tend to rate books?

```{r, echo = FALSE}
# Now, let's see what the average ratings of these top book-rating users is. 

books_and_ratings <- books_and_ratings |> 
  group_by(user_id) |> 
  mutate(average_rating = (mean(rating, na.rm = TRUE))) 

```

```{r, echo = FALSE}
# We just added a new variable, `average_rating` to the "books_and_ratings" dataset. 
  # `average_rating` shows the average rating of each user.
# However, there are 5976497 observations in our "books_and_ratings" dataset, and my computer crashes if I try to plot all those points. 
# Besides, I'm interested in the users who leave the most number of ratings anyways. 
# As the table above shows, the users who left the most ratings left 200 ratings. So let's use filter to keep only the users who rated more than 175 books. 

# Users who rated more than 175 books
books_and_ratings_top_raters <- books_and_ratings |> 
  group_by(user_id) |> 
  mutate(count = n()) |> 
  filter(count > 175)

```

```{r, echo = FALSE}
# Creating a new variable, `id`, that gives each top rater a id. The more books rated, the higher the id. 
books_and_ratings_top_raters_id <- books_and_ratings_top_raters |> 
  arrange(desc(count)) |> 
  group_by(count) |> 
  mutate(id = row_number()) 
  
# books_and_ratings_top_raters_id
```

```{r, echo = FALSE}
# Create the variable `average_rating_cut` that takes each `count` and puts it into a bin. 
# Starting at 175 books rated and above, since we only care about top raters

books_and_ratings_final <- books_and_ratings_top_raters_id |> 
  mutate(count_cut = cut(count, 
                                  breaks = c(175, 180, 185, 190, 195,
                                            200))) 

# books_and_ratings_final
```


```{r, include = FALSE}
# What is the number of Top Users, ie users who rated more than 175 books
number_of_top_raters <- books_and_ratings_top_raters_id |> 
  summarize(count = n_distinct(average_rating))

# number_of_top_raters

# There are 537 top raters.

```


```{r, echo = FALSE}
books_and_ratings_final |> 
  ggplot(aes(x = id, y = average_rating, color = count_cut)) +
  geom_col() +
  facet_wrap(~ count_cut, scales = "free_y") +
#  geom_point() +
#  geom_smooth(alpha = 0.25) +
#  scale_x_continuous(breaks = seq(0, 60000, by = 10000)) +
#  ylim(c(0, 5)) +
#  scale_y_continuous(breaks = seq(0, 5, by = 0.5)) +
  theme_bw() +
  labs(
    title = "Do Top Raters Give Higher Or Lower Average Ratings?",
    subtitle = "Top raters tend to give slightly lower average ratings than those who rate less books.",
    x = "User Rank (by number of books rated)", 
    y = "Average Rating (1-5 stars)",
    color = "Books Rated")

```

# Exploration 2: Young Adult Novels on Goodreads


### Part 1: What are the most common tags?

```{r, echo = FALSE}
popular_tags <- books_and_tags |> 
  group_by(tag_name) |> 
  summarize(tags = n()) |> 
  filter(tags > 1000) |> 
  arrange(desc(tags)) |> 
  DT::datatable()

popular_tags

```



```{r, include = FALSE}
# Possibly delete later.
### Question 3, Part 1: Which books have the most tags? The most hated or liked ones?

tags_count <- books_and_tags |> 
  group_by(goodreads_book_id) |> 
  # add everything in count
  summarize(book_tags_count = n())

tags_count
```

### Part 2: Which are the highest rated young adult (YA) books?

```{r, echo = FALSE}
# Which books have a tag_name "ya"? 

books_and_tags_ya <- books_and_tags |> 
  filter(str_detect(tag_name, "^ya"))

# books_and_tags_ya

```

```{r, echo = FALSE}
# Reminder: The "books_and_tags" joined the "books_tags" dataset and the "tags" dataset. 
# It hasn't yet matched "goodreads_book_id" with its title. So let's get the title. 

books_and_tags_ya_new <- full_join(books_and_tags_ya, books, join_by(goodreads_book_id == goodreads_book_id))

# books_and_tags_ya_new

```

**100 Most Highly Rated YA Books**
```{r, echo = FALSE}
books_and_tags_ya_new |> 
  arrange(desc(average_rating)) |> 
  select(goodreads_book_id, tag_name, title, authors, average_rating, ratings_count) |> 
  slice_head(n = 100) |> 
  DT::datatable()

```


### Part 3: What years were young adult (YA) books published in?

```{r, echo = FALSE}
# An exploration of the variable `original_publication_year`

books_and_tags_ya_new |> 
  ggplot(aes(x = original_publication_year)) +
  geom_boxplot() +
  scale_x_continuous(breaks = seq(-2000, 2500, by = 500)) +
  theme_bw() +
  labs(
    title = "What years were young adult books published in?",
    subtitle = "Most YA books were published after the year 2000, but there are a few ancient ones.",
    x = "Original Publication Year", 
    y = NULL) 

```
### Part 4: Which YA books have more ratings?

```{r, echo = FALSE}
books_and_tags_ya_new |> 
  ggplot(aes(x = original_publication_year, y = ratings_count)) +
  geom_point(alpha = 0.1) +
  scale_x_continuous(expand = c(0.1, 0.9), breaks = seq(-2000, 2500, by = 500)) +
  theme_bw() +
  labs(
    title = "How does the year a young adult book was \npublished affect its number of Goodreads ratings?",
    subtitle = "YA books published after 1750 have more ratings on Goodreads.",
    x = "Original Publication Year", 
    y = "Number of Ratings") +
  theme(plot.title = element_text(size = 20))

```
### Part 5: Do YA books published in certain years tend to be more highly rated than other YA books?


## Conclusion


## References

Zając, Zygmunt (2017, Sept. 19). Github. [https://github.com/zygmuntz/goodbooks-10k](https://github.com/zygmuntz/goodbooks-10k)


